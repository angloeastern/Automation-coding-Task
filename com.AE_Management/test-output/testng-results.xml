<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="0" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-01-15T18:10:15 IST" name="Test" finished-at="2024-01-15T18:11:46 IST" duration-ms="91441">
    <groups>
    </groups>
    <test started-at="2024-01-15T18:10:15 IST" name="Test" finished-at="2024-01-15T18:11:46 IST" duration-ms="91441">
      <class name="testClass.VesselSearchOLD">
        <test-method is-config="true" signature="ProgramStart()[pri:0, instance:testClass.VesselSearchOLD@54e1c68b]" started-at="2024-01-15T18:10:15 IST" name="ProgramStart" finished-at="2024-01-15T18:10:37 IST" duration-ms="22378" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProgramStart -->
        <test-method signature="vesselSearch(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testClass.VesselSearchOLD@54e1c68b]" started-at="2024-01-15T18:10:39 IST" name="vesselSearch" data-provider="Vesseldata" finished-at="2024-01-15T18:11:16 IST" duration-ms="36898" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[469J]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ardmore Dauntless]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Voyage Snapshot Load Successfully]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Crew Info Load Successfully]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Financial Load Successfully]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Vessel Particulars Loading]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Contect deatils loading]]>
              </value>
            </param>
          </params>
          <exception class="java.io.FileNotFoundException">
            <message>
              <![CDATA[D:\WorkInno\Poonam\TestingCodeRepositry\Automation-coding-Task\com.AE_Management\src\main\resources\Data\Regrassion.xlsx (The process cannot access the file because it is being used by another process)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.FileNotFoundException: D:\WorkInno\Poonam\TestingCodeRepositry\Automation-coding-Task\com.AE_Management\src\main\resources\Data\Regrassion.xlsx (The process cannot access the file because it is being used by another process)
at java.base/java.io.FileOutputStream.open0(Native Method)
at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:123)
at utilities.ReadExcelFile.setData(ReadExcelFile.java:56)
at testClass.VesselSearchOLD.vesselSearch(VesselSearchOLD.java:90)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.FileNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vesselSearch -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:testClass.VesselSearchOLD@54e1c68b]" started-at="2024-01-15T18:11:17 IST" name="AfterMethod" finished-at="2024-01-15T18:11:17 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="vesselSearch(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testClass.VesselSearchOLD@54e1c68b]" started-at="2024-01-15T18:11:17 IST" name="vesselSearch" data-provider="Vesseldata" finished-at="2024-01-15T18:11:24 IST" duration-ms="7257" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[UEYJ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ubuntu Empathy]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Voyage Snapshot Load Successfully]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Crew Info Load Successfully]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Financial Load Successfully]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Vessel Particulars Loading]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Contect deatils loading]]>
              </value>
            </param>
          </params>
          <exception class="java.io.FileNotFoundException">
            <message>
              <![CDATA[D:\WorkInno\Poonam\TestingCodeRepositry\Automation-coding-Task\com.AE_Management\src\main\resources\Data\Regrassion.xlsx (The process cannot access the file because it is being used by another process)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.FileNotFoundException: D:\WorkInno\Poonam\TestingCodeRepositry\Automation-coding-Task\com.AE_Management\src\main\resources\Data\Regrassion.xlsx (The process cannot access the file because it is being used by another process)
at java.base/java.io.FileOutputStream.open0(Native Method)
at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:123)
at utilities.ReadExcelFile.setData(ReadExcelFile.java:56)
at testClass.VesselSearchOLD.vesselSearch(VesselSearchOLD.java:90)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.FileNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vesselSearch -->
        <test-method signature="vesselSearch(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testClass.VesselSearchOLD@54e1c68b]" started-at="2024-01-15T18:11:24 IST" name="vesselSearch" data-provider="Vesseldata" finished-at="2024-01-15T18:11:46 IST" duration-ms="21565" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[UHYJ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ubuntu Humanity]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Voyage Snapshot Load Successfully]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Crew Info Load Successfully]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Contect deatils loading]]>
              </value>
            </param>
          </params>
          <exception class="java.io.FileNotFoundException">
            <message>
              <![CDATA[D:\WorkInno\Poonam\TestingCodeRepositry\Automation-coding-Task\com.AE_Management\src\main\resources\Data\Regrassion.xlsx (The process cannot access the file because it is being used by another process)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.FileNotFoundException: D:\WorkInno\Poonam\TestingCodeRepositry\Automation-coding-Task\com.AE_Management\src\main\resources\Data\Regrassion.xlsx (The process cannot access the file because it is being used by another process)
at java.base/java.io.FileOutputStream.open0(Native Method)
at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:123)
at utilities.ReadExcelFile.setData(ReadExcelFile.java:56)
at testClass.VesselSearchOLD.vesselSearch(VesselSearchOLD.java:90)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.FileNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vesselSearch -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:testClass.VesselSearchOLD@54e1c68b]" started-at="2024-01-15T18:11:24 IST" name="AfterMethod" finished-at="2024-01-15T18:11:24 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:testClass.VesselSearchOLD@54e1c68b]" started-at="2024-01-15T18:11:46 IST" name="AfterMethod" finished-at="2024-01-15T18:11:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:testClass.VesselSearchOLD@54e1c68b]" started-at="2024-01-15T18:11:46 IST" name="endTest" finished-at="2024-01-15T18:11:46 IST" duration-ms="340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- testClass.VesselSearchOLD -->
    </test> <!-- Test -->
  </suite> <!-- Test -->
</testng-results>
